{
  "address": "0x0D57A37418C148920b9eed1B2d62bB8fB459935F",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BUSD",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TAO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksInEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRewardForNextEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextEpochBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_blocksInEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TAO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_BUSD",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextEpochBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "notEnoughBUSDToDistribute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksInEpoch",
          "type": "uint256"
        }
      ],
      "name": "setBlocksInEpoch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        }
      ],
      "name": "setRewardRate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferRemainingBUSDOutIfNotEnough",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x451df6f8a753c55271b0e1e5d7bebc148ef00b0ff77e953dfab09c0dbbb0d1bc",
  "receipt": {
    "to": null,
    "from": "0x745120412F4397300e9F459a50a430C66281fb0E",
    "contractAddress": "0x0D57A37418C148920b9eed1B2d62bB8fB459935F",
    "transactionIndex": 2,
    "gasUsed": "810254",
    "logsBloom": "0x
    "blockHash": "0xe206c5077bcae4fe05d36ba8c23868e20e753c2fdd7671632d42ebe950c0fd9e",
    "transactionHash": "0x451df6f8a753c55271b0e1e5d7bebc148ef00b0ff77e953dfab09c0dbbb0d1bc",
    "logs": [],
    "blockNumber": 8027415,
    "cumulativeGasUsed": "962560",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ffa23fbf132c536bf3b813d275e9ed23",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksInEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRewardForNextEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextEpochBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blocksInEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TAO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BUSD\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextEpochBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notEnoughBUSDToDistribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksInEpoch\",\"type\":\"uint256\"}],\"name\":\"setBlocksInEpoch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferRemainingBUSDOutIfNotEnough\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/TaoRewardDistributor.sol\":\"TaoRewardDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staking/TaoRewardDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.7.4;\\r\\n\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\r\\n        if (returndata.length > 0) { // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n\\r\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\r\\n    function sqrrt(uint256 a) internal pure returns (uint c) {\\r\\n        if (a > 3) {\\r\\n            c = a;\\r\\n            uint b = add( div( a, 2), 1 );\\r\\n            while (b < c) {\\r\\n                c = b;\\r\\n                b = div( add( div( a, b ), b), 2 );\\r\\n            }\\r\\n        } else if (a != 0) {\\r\\n            c = 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\\r\\n        return div( mul( total_, percentage_ ), 1000 );\\r\\n    }\\r\\n\\r\\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\\r\\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\\r\\n    }\\r\\n\\r\\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\\r\\n        return div( mul(part_, 100) , total_ );\\r\\n    }\\r\\n\\r\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // (a + b) / 2 can overflow, so we distribute\\r\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\r\\n    }\\r\\n\\r\\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\\r\\n        return sqrrt( mul( multiplier_, payment_ ) );\\r\\n    }\\r\\n\\r\\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\\r\\n      return mul( multiplier_, supply_ );\\r\\n  }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nlibrary Address {\\r\\n\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies in extcodesize, which returns 0 for contracts in\\r\\n        // construction, since the code is only stored at the end of the\\r\\n        // constructor execution.\\r\\n\\r\\n        uint256 size;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { size := extcodesize(account) }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\r\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function addressToString(address _address) internal pure returns(string memory) {\\r\\n        bytes32 _bytes = bytes32(uint256(_address));\\r\\n        bytes memory HEX = \\\"0123456789abcdef\\\";\\r\\n        bytes memory _addr = new bytes(42);\\r\\n\\r\\n        _addr[0] = '0';\\r\\n        _addr[1] = 'x';\\r\\n\\r\\n        for(uint256 i = 0; i < 20; i++) {\\r\\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\\r\\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\\r\\n        }\\r\\n\\r\\n        return string(_addr);\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IVault {\\r\\n    function depositReserves( uint amount_ ) external returns ( bool );\\r\\n}\\r\\n\\r\\ncontract TaoRewardDistributor {\\r\\n    using SafeMath for uint;\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    address public owner;\\r\\n    address public vault;\\r\\n    address public TAO;\\r\\n    address public BUSD;\\r\\n    address public stakingContract;\\r\\n\\r\\n    uint public nextEpochBlock;\\r\\n    uint public blocksInEpoch;\\r\\n\\r\\n    // reward rate is in hundreths i.e. 50 = 0.5%\\r\\n    uint public rewardRate;\\r\\n\\r\\n    bool public isInitialized;\\r\\n    bool public notEnoughBUSDToDistribute;\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function initialize( uint _nextEpochBlock, uint _blocksInEpoch, uint _rewardRate, address _vault, address _stakingContract, address _TAO, address _BUSD ) external returns ( bool ) {\\r\\n        require( msg.sender == owner );\\r\\n        require( isInitialized == false );\\r\\n\\r\\n        nextEpochBlock = _nextEpochBlock;\\r\\n        blocksInEpoch = _blocksInEpoch;\\r\\n        rewardRate = _rewardRate;\\r\\n        vault = _vault;\\r\\n        stakingContract = _stakingContract;\\r\\n        TAO = _TAO;\\r\\n        BUSD = _BUSD;\\r\\n\\r\\n        isInitialized = true;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function distribute() external returns ( bool ) {\\r\\n        if ( block.number >= nextEpochBlock ) {\\r\\n            nextEpochBlock = nextEpochBlock.add( blocksInEpoch );\\r\\n\\r\\n            uint _amountBUSD = IERC20( TAO ).totalSupply().mul( rewardRate ).mul( 1e9 ).div( 10000 );\\r\\n\\r\\n            if ( _amountBUSD <= IERC20( BUSD ).balanceOf( address( this ) ) ) {\\r\\n                notEnoughBUSDToDistribute = false;\\r\\n            } else {\\r\\n                notEnoughBUSDToDistribute = true;\\r\\n            }\\r\\n\\r\\n            if ( !notEnoughBUSDToDistribute ) {\\r\\n                IERC20( BUSD ).approve( vault, _amountBUSD );\\r\\n                IVault( vault ).depositReserves( _amountBUSD );\\r\\n                IERC20( TAO ).safeTransfer( stakingContract, IERC20( TAO ).balanceOf( address( this ) ) );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setBlocksInEpoch( uint _blocksInEpoch ) external returns ( bool ) {\\r\\n        require( msg.sender == owner);\\r\\n\\r\\n        blocksInEpoch = _blocksInEpoch;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // reward rate is in hundreths i.e. 50 = 0.5%\\r\\n    function setRewardRate( uint _rewardRate ) external returns ( bool ) {\\r\\n        require( msg.sender == owner );\\r\\n\\r\\n        rewardRate = _rewardRate;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferOwnership( address _owner ) external returns ( bool ) {\\r\\n        require( msg.sender == owner );\\r\\n        owner = _owner;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferRemainingBUSDOutIfNotEnough() external returns ( bool ) {\\r\\n        require( msg.sender == owner, \\\"Not owner\\\" );\\r\\n        require( notEnoughBUSDToDistribute, \\\"Still enough BUSD for next epoch\\\" );\\r\\n\\r\\n        IERC20( BUSD ).safeTransfer( msg.sender, IERC20( BUSD ).balanceOf( address( this ) ) );\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getCurrentRewardForNextEpoch() external view returns ( uint ) {\\r\\n        return IERC20( TAO ).totalSupply().mul( rewardRate ).div( 10000 );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf47d902827bff4012168e757d17c6cef36af4948d339f2829d649a636d63e32d\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610d50806100326000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063e4fc6b6d11610071578063e4fc6b6d14610223578063ee99205c1461022b578063f1a9a73314610233578063f2fde38b1461023b578063fbfa77cf146102615761010a565b80638da5cb5b146101d95780639e447fc6146101e1578063c4e34aba146101fe578063d3c6d9f6146102065761010a565b80633bdb5f46116100de5780633bdb5f46146101b957806347a6e9d6146101c1578063484f4ea9146101c95780637b0a47ee146101d15761010a565b8062640c2e1461010f5780630fc654071461012957806316e178521461018d578063392e53cd146101b1575b600080fd5b610117610269565b60408051918252519081900360200190f35b610179600480360360e081101561013f57600080fd5b508035906020810135906040810135906001600160a01b036060820135811691608081013582169160a082013581169160c001351661026f565b604080519115158252519081900360200190f35b610195610304565b604080516001600160a01b039092168252519081900360200190f35b610179610313565b61017961031c565b61017961032a565b610195610468565b610117610477565b61019561047d565b610179600480360360208110156101f757600080fd5b503561048c565b6101176104ad565b6101796004803603602081101561021c57600080fd5b50356104b3565b6101796104d4565b6101956107e1565b6101176107f0565b6101796004803603602081101561025157600080fd5b50356001600160a01b0316610851565b61019561088e565b60055481565b600080546001600160a01b0316331461028757600080fd5b60085460ff161561029757600080fd5b50600587905560068690556007859055600180546001600160a01b038087166001600160a01b0319928316178355600480548783169084161790556002805486831690841617905560038054918516919092161790556008805460ff191682179055979650505050505050565b6002546001600160a01b031681565b60085460ff1681565b600854610100900460ff1681565b600080546001600160a01b03163314610376576040805162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015290519081900360640190fd5b600854610100900460ff166103d2576040805162461bcd60e51b815260206004820181905260248201527f5374696c6c20656e6f756768204255534420666f72206e6578742065706f6368604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516104629233926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561042357600080fd5b505afa158015610437573d6000803e3d6000fd5b505050506040513d602081101561044d57600080fd5b50516003546001600160a01b0316919061089d565b50600190565b6003546001600160a01b031681565b60075481565b6000546001600160a01b031681565b600080546001600160a01b031633146104a457600080fd5b50600755600190565b60065481565b600080546001600160a01b031633146104cb57600080fd5b50600655600190565b60006005544310610462576006546005546104ee916108f4565b6005819055506000610596612710610590633b9aca0061058a600754600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b505afa15801561056c573d6000803e3d6000fd5b505050506040513d602081101561058257600080fd5b505190610957565b90610957565b906109b0565b600354604080516370a0823160e01b815230600482015290519293506001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d602081101561060e57600080fd5b50518111610626576008805461ff0019169055610636565b6008805461ff0019166101001790555b600854610100900460ff166107da576003546001546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b505050506040513d60208110156106c857600080fd5b505060015460408051637750446f60e01b81526004810184905290516001600160a01b0390921691637750446f916024808201926020929091908290030181600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050506040513d602081101561074257600080fd5b505060048054600254604080516370a0823160e01b81523094810194909452516107da936001600160a01b0393841693909216916370a08231916024808301926020929190829003018186803b15801561079b57600080fd5b505afa1580156107af573d6000803e3d6000fd5b505050506040513d60208110156107c557600080fd5b50516002546001600160a01b0316919061089d565b5050600190565b6004546001600160a01b031681565b600061084c612710610590600754600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b905090565b600080546001600160a01b0316331461086957600080fd5b50600080546001600160a01b0383166001600160a01b03199091161790556001919050565b6001546001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108ef9084906109f2565b505050565b60008282018381101561094e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60008261096657506000610951565b8282028284828161097357fe5b041461094e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610cd06021913960400191505060405180910390fd5b600061094e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610aa3565b6060610a47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b459092919063ffffffff16565b8051909150156108ef57808060200190516020811015610a6657600080fd5b50516108ef5760405162461bcd60e51b815260040180806020018281038252602a815260200180610cf1602a913960400191505060405180910390fd5b60008183610b2f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610af4578181015183820152602001610adc565b50505050905090810190601f168015610b215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b3b57fe5b0495945050505050565b6060610b548484600085610b5c565b949350505050565b6060610b6785610cc9565b610bb8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610bf75780518252601f199092019160209182019101610bd8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610c59576040519150601f19603f3d011682016040523d82523d6000602084013e610c5e565b606091505b50915091508115610c72579150610b549050565b805115610c825780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610af4578181015183820152602001610adc565b3b15159056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c83267ed387f85fe770fcefb93ee0e7cef67e645502b1d4d2b40a20cb125affc64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063e4fc6b6d11610071578063e4fc6b6d14610223578063ee99205c1461022b578063f1a9a73314610233578063f2fde38b1461023b578063fbfa77cf146102615761010a565b80638da5cb5b146101d95780639e447fc6146101e1578063c4e34aba146101fe578063d3c6d9f6146102065761010a565b80633bdb5f46116100de5780633bdb5f46146101b957806347a6e9d6146101c1578063484f4ea9146101c95780637b0a47ee146101d15761010a565b8062640c2e1461010f5780630fc654071461012957806316e178521461018d578063392e53cd146101b1575b600080fd5b610117610269565b60408051918252519081900360200190f35b610179600480360360e081101561013f57600080fd5b508035906020810135906040810135906001600160a01b036060820135811691608081013582169160a082013581169160c001351661026f565b604080519115158252519081900360200190f35b610195610304565b604080516001600160a01b039092168252519081900360200190f35b610179610313565b61017961031c565b61017961032a565b610195610468565b610117610477565b61019561047d565b610179600480360360208110156101f757600080fd5b503561048c565b6101176104ad565b6101796004803603602081101561021c57600080fd5b50356104b3565b6101796104d4565b6101956107e1565b6101176107f0565b6101796004803603602081101561025157600080fd5b50356001600160a01b0316610851565b61019561088e565b60055481565b600080546001600160a01b0316331461028757600080fd5b60085460ff161561029757600080fd5b50600587905560068690556007859055600180546001600160a01b038087166001600160a01b0319928316178355600480548783169084161790556002805486831690841617905560038054918516919092161790556008805460ff191682179055979650505050505050565b6002546001600160a01b031681565b60085460ff1681565b600854610100900460ff1681565b600080546001600160a01b03163314610376576040805162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015290519081900360640190fd5b600854610100900460ff166103d2576040805162461bcd60e51b815260206004820181905260248201527f5374696c6c20656e6f756768204255534420666f72206e6578742065706f6368604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516104629233926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561042357600080fd5b505afa158015610437573d6000803e3d6000fd5b505050506040513d602081101561044d57600080fd5b50516003546001600160a01b0316919061089d565b50600190565b6003546001600160a01b031681565b60075481565b6000546001600160a01b031681565b600080546001600160a01b031633146104a457600080fd5b50600755600190565b60065481565b600080546001600160a01b031633146104cb57600080fd5b50600655600190565b60006005544310610462576006546005546104ee916108f4565b6005819055506000610596612710610590633b9aca0061058a600754600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b505afa15801561056c573d6000803e3d6000fd5b505050506040513d602081101561058257600080fd5b505190610957565b90610957565b906109b0565b600354604080516370a0823160e01b815230600482015290519293506001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d602081101561060e57600080fd5b50518111610626576008805461ff0019169055610636565b6008805461ff0019166101001790555b600854610100900460ff166107da576003546001546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b505050506040513d60208110156106c857600080fd5b505060015460408051637750446f60e01b81526004810184905290516001600160a01b0390921691637750446f916024808201926020929091908290030181600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050506040513d602081101561074257600080fd5b505060048054600254604080516370a0823160e01b81523094810194909452516107da936001600160a01b0393841693909216916370a08231916024808301926020929190829003018186803b15801561079b57600080fd5b505afa1580156107af573d6000803e3d6000fd5b505050506040513d60208110156107c557600080fd5b50516002546001600160a01b0316919061089d565b5050600190565b6004546001600160a01b031681565b600061084c612710610590600754600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b905090565b600080546001600160a01b0316331461086957600080fd5b50600080546001600160a01b0383166001600160a01b03199091161790556001919050565b6001546001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108ef9084906109f2565b505050565b60008282018381101561094e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60008261096657506000610951565b8282028284828161097357fe5b041461094e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610cd06021913960400191505060405180910390fd5b600061094e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610aa3565b6060610a47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b459092919063ffffffff16565b8051909150156108ef57808060200190516020811015610a6657600080fd5b50516108ef5760405162461bcd60e51b815260040180806020018281038252602a815260200180610cf1602a913960400191505060405180910390fd5b60008183610b2f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610af4578181015183820152602001610adc565b50505050905090810190601f168015610b215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b3b57fe5b0495945050505050565b6060610b548484600085610b5c565b949350505050565b6060610b6785610cc9565b610bb8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610bf75780518252601f199092019160209182019101610bd8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610c59576040519150601f19603f3d011682016040523d82523d6000602084013e610c5e565b606091505b50915091508115610c72579150610b549050565b805115610c825780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610af4578181015183820152602001610adc565b3b15159056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c83267ed387f85fe770fcefb93ee0e7cef67e645502b1d4d2b40a20cb125affc64736f6c63430007040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1086,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1088,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "vault",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1090,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "TAO",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1092,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "BUSD",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1094,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "stakingContract",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1096,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "nextEpochBlock",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1098,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "blocksInEpoch",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1100,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "rewardRate",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1102,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "isInitialized",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 1104,
        "contract": "contracts/Staking/TaoRewardDistributor.sol:TaoRewardDistributor",
        "label": "notEnoughBUSDToDistribute",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}